@model MultiPlug.Base.Http.EdgeApp
@functions
{
    string isEnabled(bool? theValue)
    {
        return (theValue.Value) ? "checked" : string.Empty;
    }
    string @isDisabled(bool? theValue)
    {
        return (theValue.Value) ? string.Empty : "checked";
    }
}
<form action="" method="post" accept-charset="utf-8" enctype="application/x-www-form-urlencoded">
    <section class="row-fluid">

        <div class="row-fluid">
            <div class="box">
                <div class="span2">
                    <a style="line-height: 52px;" href="#"><img alt="File Logo" src="@Raw(Model.Context.Paths.Assets)images/file.png"></a>
                </div>
                <div class="span8">
                    <p style="font-size:26px; line-height: 54px; text-align: center; margin: 0px;">File Writer</p>
                </div>
                <div class="span2" style="text-align: right;">
                    <a class="btn btn-black" style="height:44px; width:35px" href="@Raw(Model.Context.Paths.Back)"><i class="icon-arrow-left icon-large"></i><p>Back</p></a>
                    <button type="submit" value="submit" style="height:54px; width:65px" class="item btn btn-green"><i class="icon-save icon-large"></i><p>Save</p></button>
                </div>
            </div>
        </div>

        <input type="hidden" name="Guid" value="@Model.Extension.Model.Guid">

        <div class="row-fluid">

            <div class="box non-collapsible">
                <div class="row-fluid">
                    <div class="span3">
                        <div class="row-fluid"><div class="span12">File Path</div></div>
                        <div class="row-fluid">
                            <div class="span10"><input name="FilePath" class="input-block-level" type="text" placeholder="File Path" value="@Model.Extension.Model.FilePath"></div>
                            <div class="span2">
                                <a class="btn btn-blue" href="@Raw(Model.Context.Paths.Home)writer/path/?id=@Model.Extension.Model.Guid"><i class="icon-edit"></i></a>
                            </div>
                        </div>
                    </div>

                    <div class="span1">
                        <div class="row-fluid"><div class="span12">Action</div></div>
                        <div class="row-fluid">
                            <div class="span12">
                                <label class="radio">
                                    <input type="radio" name="Append" value="false" @isDisabled(Model.Extension.Model.Append)>
                                    Overwrite
                                </label>
                            </div>
                        </div>
                    </div>
                    <div class="span1">
                        <div class="row-fluid"><div class="span12"></div></div>
                        <div class="row-fluid">
                            <div class="span12">
                                <label class="radio">
                                    <input type="radio" name="Append" value="true" @isEnabled(Model.Extension.Model.Append)>
                                    Append
                                </label>
                            </div>
                        </div>
                    </div>
                    <div class="span1">
                        <div class="row-fluid"><div class="span12">WriteLine</div></div>
                        <div class="row-fluid">
                            <div class="span12">
                                <input type="checkbox" name="WriteLine" value="true" @isEnabled(Model.Extension.Model.WriteLine)>
                            </div>
                        </div>
                    </div>
                    <div class="span2">
                        <div class="row-fluid"><div class="span12">Write Prefix</div></div>
                        <div class="row-fluid">
                            <div class="span12"><input name="WritePrefix" class="input-block-level" type="text" value="@Model.Extension.Model.WritePrefix"></div>
                        </div>
                    </div>
                    <div class="span2">
                        <div class="row-fluid"><div class="span12">Write Separator</div></div>
                        <div class="row-fluid">
                            <div class="span12"><input name="WriteSeparator" class="input-block-level" type="text" value="@Model.Extension.Model.WriteSeparator"></div>
                        </div>
                    </div>
                    <div class="span2">
                        <div class="row-fluid"><div class="span12">Write Suffix</div></div>
                        <div class="row-fluid">
                            <div class="span12"><input name="WriteSuffix" class="input-block-level" type="text" value="@Model.Extension.Model.WriteSuffix"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row-fluid">
            <div class="span6">
                <h3 class="box-header">
                    Subscriptions
                </h3>
                <div class="box">

                    <ul id="Subscriptions" style="list-style: none;">
                        @foreach (var Subscription in @Model.Extension.Model.WriteSubscriptions)
                        {
                            <li id="@Model.Extension.Model.Guid--subid--@Subscription.Guid--li">
                                <div class="control-group">
                                    <div class="controls">
                                        <div class="span11">
                                            <input type="hidden" name="SubscriptionGuid" value="@Subscription.Guid" />
                                            <input type="text" name="SubscriptionId" class="input-block-level mp-event-picker" value="@Subscription.Id" autocomplete="off">
                                        </div>
                                        <div class="span1">
                                            <button id="@Model.Extension.Model.Guid--subid--@Subscription.Guid" type="button" class="item btn btn-red delete-sub"><i class="icon-trash"></i></button>
                                        </div>
                                    </div>
                                </div>
                            </li>
                        }
                    </ul>
                    <ul style="list-style: none;">
                        <li>
                            <div class="control-group">
                                <div class="controls">
                                    <div class="span11">
                                    </div>
                                    <div class="span1">
                                        <button type="button" id="new-sub" class="btn btn-green"><i class="icon-plus"></i></button>
                                    </div>
                                </div>
                            </div>
                        </li>
                    </ul>

                </div>
            </div>
            <div class="span6">
            </div>
        </div>
    </section>
</form>

<script>

    function newSubElement(ranNum) {
        return '<li id="@Model.Extension.Model.Guid--subid--' + ranNum + '--li"> \
                <div class="control-group">\
                    <div class="controls">\
                        <div class="span11">\
                            <input type="hidden" name="SubscriptionGuid" value="" />\
                            <input type="text" name="SubscriptionId" class="input-block-level mp-event-picker" value="" autocomplete="off">\
                        </div>\
                        <div class="span1">\
                            <button id="@Model.Extension.Model.Guid--subid--' + ranNum + '" type="button" class="item btn btn-red delete-sub"><i class="icon-trash"></i></button>\
                        </div>\
                    </div>\
                </div>\
            </li>';
    }

    function ApplyDelete(theSelector) {
        $(theSelector).on('click', '.delete-sub', function () {
            $('#' + $(this).attr('id') + '--li').remove();
        });
    }

    $('#new-sub').on('click', function () {
        $('#Subscriptions').append(newSubElement( Math.floor((Math.random() * 100000) + 1)))
        var newstart = $('#Subscriptions li:last-child');
        applyMPEventPickerOnClick();
        ApplyDelete(newstart.find(':button'));
    });

    ApplyDelete( document );

</script>
